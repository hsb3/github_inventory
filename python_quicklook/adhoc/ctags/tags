__init__	src/github_inventory/exceptions.py	/^        super().__init__(message)$/
append	src/github_inventory/inventory.py	/^        detailed_repos.append(repo_data)$/
client	src/github_inventory/github_client.py	/^        client_type: Type of client ('cli' or 'api/
get	src/github_inventory/cli.py	/^            lang = repo.get("primary_language", ""/
import	src/github_inventory/batch.py	/^from .inventory import ($/
isinstance	src/github_inventory/github_client.py	/^        cmd_str = cmd if isinstance(cmd, str) else/
join	src/github_inventory/batch.py	/^        supported_list = ", ".join(sorted(supporte/
print	src/github_inventory/report.py	/^        print(f"Error: {filename} not found")$/
split	src/github_inventory/github_client.py	/^            cmd_args = shlex.split(cmd) if isinsta/
